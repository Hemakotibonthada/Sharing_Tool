╔══════════════════════════════════════════════════════════════════════╗
║              FILE UPLOAD & DISPLAY - DEBUG GUIDE                     ║
╚══════════════════════════════════════════════════════════════════════╝

🔍 ISSUE: Uploaded files not showing in file manager tab

═══════════════════════════════════════════════════════════════════════
📋 CURRENT STATUS
═══════════════════════════════════════════════════════════════════════

✓ shared_files folder EXISTS but is EMPTY (0 files)
✓ Metadata has 3 entries (orphaned - files were deleted)
✓ 3 users registered (admin, Hema, testuser123)
⚠️  Files uploaded before were deleted from disk

DIAGNOSIS:
  • Files metadata exists but actual files are missing
  • Need to upload NEW files and check if they save properly
  • Enhanced logging added to track upload process

═══════════════════════════════════════════════════════════════════════
🧪 STEP-BY-STEP DEBUG PROCESS
═══════════════════════════════════════════════════════════════════════

STEP 1: Check Current State
  Run: python debug_file_listing.py
  Expected: Shows 0 files in shared_files folder

STEP 2: Start Server
  Run: python app.py
  Expected: Server starts on port 5001

STEP 3: Open Browser with Console
  1. Navigate to: http://localhost:5001/
  2. Press F12 to open Developer Tools
  3. Go to Console tab
  4. Keep console open during testing

STEP 4: Login
  1. If not logged in, go to http://localhost:5001/login
  2. Login with: admin / admin (or your credentials)
  3. Check console for:
     ✓ "On login page, skipping main app initialization"
     ✓ Login success messages

STEP 5: Go to Main Page
  1. After login, you should be at main page
  2. Check console for:
     ✓ "High-speed transfer system initialized"
     ✓ "Loading files... authToken: Present"
     ✓ "Response status: 200 OK"
     ✓ "Files loaded: 0 files"
     ✓ "renderFiles called. Total files: 0"

STEP 6: Navigate to Upload Section
  1. Click "Upload" in sidebar OR click "Uploads" card on dashboard
  2. Check console for any errors

STEP 7: Upload a Test File
  1. Click "Select Files" or drag-and-drop a small file (< 10MB)
  2. Watch console for these messages:
     ✓ "handleFiles called with: ..."
     ✓ "Files to upload: 1"
     ✓ "uploadQueue div: <div>..."
     ✓ "Adding file to queue: filename.ext"
     ✓ "Using regular HTTP upload for: filename.ext"
     ✓ "Upload completed. Status: 200 Response: ..."
     ✓ "Reloading files list after upload..."
     ✓ "Files loaded: 1 files"

STEP 8: Check Network Tab
  1. In Developer Tools, go to Network tab
  2. Upload a file
  3. Look for:
     ✓ POST /upload (Status: 200)
     ✓ GET /files (Status: 200)
  4. Click on /upload request:
     - Check Request Payload (file data)
     - Check Response (should be JSON with file info)

STEP 9: Navigate to Files Section
  1. Click "Files" in sidebar OR click "Total Files" card
  2. Check console for:
     ✓ "renderFiles called. Total files: 1"
     ✓ "Displaying 1 files in grid"
  3. Visual Check:
     ✓ File card should appear in grid
     ✓ File name, size, date visible
     ✓ No "empty state" message

STEP 10: Verify Files on Disk
  Run: python debug_file_listing.py
  Expected: Shows 1 file in shared_files folder

═══════════════════════════════════════════════════════════════════════
🔍 CONSOLE MESSAGES TO WATCH FOR
═══════════════════════════════════════════════════════════════════════

✅ GOOD MESSAGES (Expected):
  "On login page, skipping main app initialization"
  "High-speed transfer system initialized"
  "Loading files... authToken: Present"
  "Response status: 200 OK"
  "Files loaded: N files"
  "renderFiles called. Total files: N"
  "handleFiles called with: ..."
  "Upload completed. Status: 200"
  "Reloading files list after upload..."
  "Displaying N files in grid"

❌ BAD MESSAGES (Problems):
  "Loading files... authToken: Missing" → Not logged in!
  "Response status: 401" → Authentication failed
  "Response status: 500" → Server error
  "Failed to load files" → API error
  "Upload failed: filename" → Upload error
  "No files to display. Showing empty state." → Files not loaded

═══════════════════════════════════════════════════════════════════════
🐛 COMMON ISSUES & SOLUTIONS
═══════════════════════════════════════════════════════════════════════

ISSUE 1: "Loading files... authToken: Missing"
SOLUTION:
  • You're not logged in
  • Go to /login and login
  • Check if redirecting to login page repeatedly
  • Clear localStorage and login again

ISSUE 2: "Response status: 401 Unauthorized"
SOLUTION:
  • Token expired or invalid
  • Logout and login again
  • Clear browser data (F12 → Application → Clear storage)

ISSUE 3: "Upload completed. Status: 500"
SOLUTION:
  • Server error during upload
  • Check terminal/server console for Python errors
  • Check if shared_files folder has write permissions
  • Try uploading smaller file

ISSUE 4: "Files loaded: 0 files" (but files exist on disk)
SOLUTION:
  • Files don't have metadata
  • Files in wrong folder (should be in shared_files/)
  • Permission mismatch (can't access files)
  • Run: python debug_file_listing.py to verify

ISSUE 5: Upload shows 100% but file doesn't appear
SOLUTION:
  • File uploaded but loadFiles() didn't run
  • Manually refresh: Click Files tab again
  • Check console for "Reloading files list..." message
  • Check Network tab for GET /files request

ISSUE 6: "filesGrid element: null"
SOLUTION:
  • DOM element missing in HTML
  • Wrong page or section not active
  • Navigate to Files section first

═══════════════════════════════════════════════════════════════════════
🔧 MANUAL TESTS
═══════════════════════════════════════════════════════════════════════

TEST 1: API Endpoint (Command Line)
  PowerShell:
  > $token = "your_auth_token_here"
  > Invoke-WebRequest -Uri "http://localhost:5001/files" `
      -Headers @{ "Authorization" = "Bearer $token" } `
      -Method GET
  Expected: JSON array of files

TEST 2: Check Folder Manually
  PowerShell:
  > Get-ChildItem shared_files
  Expected: List of uploaded files

TEST 3: Upload via curl (Alternative)
  PowerShell:
  > curl -F "file=@test.txt" `
      -H "Authorization: Bearer $token" `
      http://localhost:5001/upload
  Expected: JSON response with file info

═══════════════════════════════════════════════════════════════════════
📊 CHECKLIST
═══════════════════════════════════════════════════════════════════════

Before Testing:
  □ Server running (python app.py)
  □ Browser console open (F12)
  □ Network tab visible
  □ Logged in with valid account

During Upload:
  □ Console shows "handleFiles called"
  □ Upload progress bar appears
  □ Upload reaches 100%
  □ Console shows "Upload completed. Status: 200"
  □ Console shows "Reloading files list..."
  □ Toast notification appears

After Upload:
  □ Navigate to Files tab
  □ File card appears in grid
  □ File name/size/date visible
  □ No empty state message
  □ Run debug script shows file on disk

═══════════════════════════════════════════════════════════════════════
📞 IF STILL NOT WORKING
═══════════════════════════════════════════════════════════════════════

1. Capture Console Log:
   - Open console (F12)
   - Upload a file
   - Right-click in console → Save as...
   - Share the log file

2. Check Server Terminal:
   - Look for errors in Python output
   - Look for upload confirmation messages
   - Check for permission errors

3. Verify File System:
   - Run: python debug_file_listing.py
   - Check if shared_files folder has files
   - Check if metadata matches files

4. Test with Different File:
   - Try very small file (< 1KB)
   - Try text file instead of binary
   - Try different file extension

5. Check Browser:
   - Try incognito window
   - Try different browser
   - Clear all cache/cookies

═══════════════════════════════════════════════════════════════════════

✅ Enhanced Logging Added:
  • Upload completion logging
  • File loading detailed logs
  • Render function logs
  • Network response logging

Next: Follow the steps above and report what you see in the console!
